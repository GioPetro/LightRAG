# Get Message

```http
GET https://api.getzep.com/api/v2/sessions/{sessionId}/messages/{messageUUID}
```

Returns a specific message from a session.



## Path Parameters

- SessionId (required): Soon to be deprecated as this is not needed.
- MessageUuid (required): The UUID of the message.

## Response Body

- 200: The message.
- 404: Not Found
- 500: Internal Server Error

## Examples

```shell
curl https://api.getzep.com/api/v2/sessions/sessionId/messages/messageUUID
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.memory.get_session_message(
    session_id="sessionId",
    message_uuid="messageUUID",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.memory.getSessionMessage("sessionId", "messageUUID");

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Memory.GetSessionMessage(
	context.TODO(),
	"sessionId",
	"messageUUID",
)

```

```shell
curl https://api.getzep.com/api/v2/sessions/:sessionId/messages/:messageUUID
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.memory.get_session_message(
    session_id="sessionId",
    message_uuid="messageUUID",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.memory.getSessionMessage("sessionId", "messageUUID");

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Memory.GetSessionMessage(
	context.TODO(),
	"sessionId",
	"messageUUID",
)

```

```shell
curl https://api.getzep.com/api/v2/sessions/:sessionId/messages/:messageUUID
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.memory.get_session_message(
    session_id="sessionId",
    message_uuid="messageUUID",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.memory.getSessionMessage("sessionId", "messageUUID");

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Memory.GetSessionMessage(
	context.TODO(),
	"sessionId",
	"messageUUID",
)

```