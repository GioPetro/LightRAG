# Add Session

```http
POST https://api.getzep.com/api/v2/sessions
Content-Type: application/json
```

Creates a new session.



## Response Body

- 201: The added session.
- 400: Bad Request
- 500: Internal Server Error

## Examples

```shell
curl -X POST https://api.getzep.com/api/v2/sessions \
     -H "Authorization: Api-Key <apiKey>" \
     -H "Content-Type: application/json" \
     -d '{
  "session_id": "session_id",
  "user_id": "user_id"
}'
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.memory.add_session(
    session_id="session_id",
    user_id="user_id",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.memory.addSession({
    sessionId: "session_id",
    userId: "user_id"
});

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2 "github.com/getzep/zep-go/v2"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Memory.AddSession(
	context.TODO(),
	&v2.CreateSessionRequest{
		SessionID: "session_id",
		UserID:    "user_id",
	},
)

```

```shell
curl -X POST https://api.getzep.com/api/v2/sessions \
     -H "Authorization: Api-Key <apiKey>" \
     -H "Content-Type: application/json" \
     -d '{
  "session_id": "string",
  "user_id": "string"
}'
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.memory.add_session(
    session_id="session_id",
    user_id="user_id",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.memory.addSession({
    sessionId: "session_id",
    userId: "user_id"
});

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2 "github.com/getzep/zep-go/v2"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Memory.AddSession(
	context.TODO(),
	&v2.CreateSessionRequest{
		SessionID: "session_id",
		UserID:    "user_id",
	},
)

```

```shell
curl -X POST https://api.getzep.com/api/v2/sessions \
     -H "Authorization: Api-Key <apiKey>" \
     -H "Content-Type: application/json" \
     -d '{
  "session_id": "string",
  "user_id": "string"
}'
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.memory.add_session(
    session_id="session_id",
    user_id="user_id",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.memory.addSession({
    sessionId: "session_id",
    userId: "user_id"
});

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2 "github.com/getzep/zep-go/v2"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Memory.AddSession(
	context.TODO(),
	&v2.CreateSessionRequest{
		SessionID: "session_id",
		UserID:    "user_id",
	},
)

```