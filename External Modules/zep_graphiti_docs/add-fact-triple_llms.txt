# Add Fact Triple

```http
POST https://api.getzep.com/api/v2/graph/add-fact-triple
Content-Type: application/json
```

Add a fact triple for a user or group



## Response Body

- 200: Resulting triple
- 400: Bad Request
- 500: Internal Server Error

## Examples

```shell
curl -X POST https://api.getzep.com/api/v2/graph/add-fact-triple \
     -H "Content-Type: application/json" \
     -d '{
  "fact": "fact",
  "fact_name": "fact_name",
  "target_node_name": "target_node_name"
}'
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.graph.add_fact_triple(
    fact="fact",
    fact_name="fact_name",
    target_node_name="target_node_name",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.graph.addFactTriple({
    fact: "fact",
    factName: "fact_name",
    targetNodeName: "target_node_name"
});

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2 "github.com/getzep/zep-go/v2"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Graph.AddFactTriple(
	context.TODO(),
	&v2.AddTripleRequest{
		Fact:           "fact",
		FactName:       "fact_name",
		TargetNodeName: "target_node_name",
	},
)

```

```shell
curl -X POST https://api.getzep.com/api/v2/graph/add-fact-triple \
     -H "Content-Type: application/json" \
     -d '{
  "fact": "string",
  "fact_name": "string",
  "target_node_name": "string"
}'
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.graph.add_fact_triple(
    fact="fact",
    fact_name="fact_name",
    target_node_name="target_node_name",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.graph.addFactTriple({
    fact: "fact",
    factName: "fact_name",
    targetNodeName: "target_node_name"
});

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2 "github.com/getzep/zep-go/v2"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Graph.AddFactTriple(
	context.TODO(),
	&v2.AddTripleRequest{
		Fact:           "fact",
		FactName:       "fact_name",
		TargetNodeName: "target_node_name",
	},
)

```

```shell
curl -X POST https://api.getzep.com/api/v2/graph/add-fact-triple \
     -H "Content-Type: application/json" \
     -d '{
  "fact": "string",
  "fact_name": "string",
  "target_node_name": "string"
}'
```

```python
from zep_cloud.client import Zep

client = Zep(
    api_key="YOUR_API_KEY",
)
client.graph.add_fact_triple(
    fact="fact",
    fact_name="fact_name",
    target_node_name="target_node_name",
)

```

```typescript
import { ZepClient } from "zep-cloud";

const client = new ZepClient({ apiKey: "YOUR_API_KEY" });
await client.graph.addFactTriple({
    fact: "fact",
    factName: "fact_name",
    targetNodeName: "target_node_name"
});

```

```go
import (
	context "context"
	option "github.com/getzep/zep-go/v2/option"
	v2 "github.com/getzep/zep-go/v2"
	v2client "github.com/getzep/zep-go/v2/client"
)

client := v2client.NewClient(
	option.WithAPIKey(
		"<YOUR_APIKey>",
	),
)
response, err := client.Graph.AddFactTriple(
	context.TODO(),
	&v2.AddTripleRequest{
		Fact:           "fact",
		FactName:       "fact_name",
		TargetNodeName: "target_node_name",
	},
)

```